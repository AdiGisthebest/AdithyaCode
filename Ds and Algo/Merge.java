import java.util.ArrayList;
import java.util.List;
class Merge {
    public int[] sortRec(int[] arr){
        if(arr.length == 1) {
            return arr;
        } else {
            int [] arr1 = new int[(int)Math.ceil(arr.length/2)];
            int [] arr2 = new int[arr.length - arr1.length];
            for(int i = 0; i < arr1.length; i++) {
                arr1[i] = arr[i];
            }
            for(int i = arr1.length; i < arr.length; i++) {
                System.out.println(arr1.length + " " + arr.length);
                arr2[i - arr1.length] = arr[i];
            }
            arr1 = this.sortRec(arr1);
            arr2 = this.sortRec(arr2);
            int arr1Pointer = 0;
            int arr2Pointer = 0;
            boolean arr1Done = false;
            boolean arr2Done = false;
            for(int i = 0 ; i < arr.length; i++) {
                if(arr1Done) {
                    arr[i] = arr2[arr2Pointer];
                    arr2Pointer++;
                } else if (arr2Done) {
                    arr[i] = arr1[arr1Pointer];
                    arr1Pointer++;
                } else {
                    if (arr1[arr1Pointer] < arr2[arr2Pointer]) {
                        arr[i] = arr1[arr1Pointer];
                        arr1Pointer++;
                        if(arr1.length == arr1Pointer) {
                            arr1Done = true;
                        }
                    } else {
                        arr[i] = arr2[arr2Pointer];
                        arr2Pointer++;
                        if(arr2.length == arr2Pointer) {
                            arr2Done = true;
                        }
                    }
                }
            }
            return arr;
        }
    }
    public static void main(String[] args) {
        Merge merge = new Merge();
        int [] sortArr = {2,1,3,7,4,70,494,420,213,480,437,301,400,49,186,173,244,98,442,66,111,479,416,367,366,56,230,20,235,114,360,143,9,485,218,293,115,67,316,347,283,323,194,359,348,122,489,205,500,410,198,453,166,147,333,321,339,371,222,269,78,79,455,29,196,471,34,352,105,201,433,187,475,307,387,13,362,417,399,319,150,378,33,413,119,31,224,495,102,470,412,183,18,432,395,177,415,397,227,60,80,159,444,411,103,313,88,131,403,270,445,164,435,195,137,130,153,386,434,26,372,273,46,449,123,37,271,292,355,486,354,295,440,53,81,251,212,332,58,120,407,436,233,165,1,353,41,264,441,14,490,304,375,96,334,429,127,158,62,61,289,162,257,141,272,286,369,104,239,256,237,297,357,202,50,484,28,240,361,275,199,340,125,174,87,210,476,419,179,431,117,349,266,331,22,418,281,267,241,48,181,154,226,38,32,473,305,279,377,139,472,396,426,310,221,216,326,57,328,312,4,370,421,284,83,211,344,200,462,128,17,234,342,346,276,363,390,384,388,94,40,447,425,466,35,167,175,236,260,373,317,460,219,428,294,380,180,110,259,203,430,220,99,246,160,121,71,193,457,337,129,268,309,142,356,427,461,190,191,75,483,11,393,217,298,157,156,44,291,197,232,45,458,263,138,320,43,423,296,19,182,21,306,404,452,350,343,151,223,467,358,3,300,318,84,106,42,161,253,254,214,491,280,329,278,136,446,176,422,238,464,171,287,277,250,155,178,74,368,149,456,327,64,107,168,451,383,169,364,247,465,51,163,341,394,85,391,82,189,6,302,389,89,30,192,482,77,55,228,459,229,184,243,379,406,492,405,170,208,424,39,336,282,109,135,351,172,338,204,12,7,95,499,265,496,15,25,73,385,134,185,140,402,248,468,72,365,381,487,54,101,8,100,314,92,474,207,374,408,242,209,477,63,249,252,108,97,308,124,10,2,438,116,322,52,126,498,146,345,133,69,288,65,225,315,398,47,132,469,493,112,478,258,488,93,215,448,401,382,330,324,148,16,414,443,206,262,303,299,36,144,454,311,285,118,481,335,113,274,231,392,255,152,90,145,376,5,76,91,68,188,261,439,450,325,23,245,497,463,59,409,27,24,290,860};
        sortArr = merge.sortRec(sortArr);
        for(int i = 0; i < sortArr.length; i++) {
    }
}